---
- name: Enhanced Hyper-V VM List
  hosts: all
  gather_facts: no
  tasks:
    - name: Get detailed VM information
      win_shell: |
        $vms = Get-VM | Select-Object Name, 
            @{Name='StateValue'; Expression={$_.State}},
            @{Name='CPUUsage'; Expression={$_.CPUUsage}},
            @{Name='MemoryAssignedGB'; Expression={[math]::Round($_.MemoryAssigned / 1GB, 2)}},
            Status, 
            @{Name='UptimeString'; Expression={$_.Uptime.ToString()}}
        ConvertTo-Json -InputObject $vms -Depth 3
      register: vm_info
      
    - name: Debug raw output (first item only)
      debug:
        msg: "First VM raw data: {{ (vm_info.stdout | from_json)[0] | default({}) }}"
      when: (vm_info.stdout | from_json) is sequence and (vm_info.stdout | from_json) | length > 0

    - name: Parse VM data
      set_fact:
        vm_list: "{{ vm_info.stdout | from_json }}"
        
    - name: Ensure VM list is an array
      set_fact:
        vm_array: "{{ [vm_list] if vm_list is mapping else vm_list }}"

    - name: Display formatted VM list
      debug:
        msg: |
          🖥️  {{ item.Name | default('Unknown VM') }}
          - State:       {% if item.StateValue == 2 %}🔴 Stopped{% elif item.StateValue == 3 %}🟢 Running{% else %}Unknown ({{ item.StateValue | default('Not available') }}){% endif %}
          - CPU Usage:   {{ item.CPUUsage | default(0) }}%
          - Memory:      {{ item.MemoryAssignedGB | default(0) }} GB
          - Status:      {{ item.Status | default('Unknown') }}
          - Uptime:      {% if item.UptimeString is defined and item.UptimeString %}{{ item.UptimeString.split('.')[0] }}{% else %}N/A{% endif %}
      loop: "{{ vm_array }}"
      loop_control:
        label: "{{ item.Name | default('Unknown VM') }}"
      
    - name: Count running and stopped VMs
      set_fact:
        running_vms: "{{ vm_array | selectattr('StateValue', 'equalto', 3) | list }}"
        stopped_vms: "{{ vm_array | selectattr('StateValue', 'equalto', 2) | list }}"
      
    - name: Show VM summary
      debug:
        msg: "Total VMs: {{ vm_array | length }} (🟢 {{ running_vms | length }} running, 🔴 {{ stopped_vms | length }} stopped)"
