- name: Enhanced Hyper-V VM List
  hosts: all
  tasks:
    - name: Get detailed VM information
      win_shell: |
        Get-VM | Select-Object Name, State, 
            @{Name='CPUUsage'; Expression={$_.CPUUsage}},
            @{Name='MemoryAssignedGB'; Expression={[math]::Round($_.MemoryAssigned / 1GB, 2)}},
            Status, Uptime | ConvertTo-Json -Depth 3
      register: vm_info

    - name: Debug raw output
      debug:
        var: vm_info.stdout
      
    - name: Parse JSON properly
      set_fact:
        parsed_vms: "{{ vm_info.stdout | from_json }}"
        
    - name: Force array format
      set_fact:
        vm_array: "{{ [parsed_vms] if parsed_vms is mapping else parsed_vms }}"
      
    - name: Display formatted VM list
      debug:
        msg: |
          üñ•Ô∏è  {{ item.Name }}
          - State:       {{ item.State | default('Unknown') | ansible.builtin.replace('Off', 'üî¥ Stopped') | replace('On', 'üü¢ Running') }}
          - CPU Usage:   {{ item.CPUUsage | default(0) }}%
          - Memory:      {{ item.MemoryAssignedGB | default(0) }} GB
          - Status:      {{ item.Status | default('Unknown') }}
          - Uptime:      {{ (item.Uptime | default('0')).ToString().Split('.')[0] if item.Uptime is defined else 'N/A' }}
      loop: "{{ vm_array }}"
      loop_control:
        label: "{{ item.Name | default('Unknown VM') }}"
      
    - name: Show VM summary
      debug:
        msg: "Total VMs: {{ vm_array | length }} (üü¢ {{ (vm_array | selectattr('State', 'equalto', 'On') | list | length) }} running, üî¥ {{ (vm_array | selectattr('State', 'equalto', 'Off') | list | length) }} stopped)"
